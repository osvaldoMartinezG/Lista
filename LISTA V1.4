/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nodos.clase;

import java.util.Scanner;

/**
 *
 * @author locop
 */
public class NodosClase {

        
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
            NodosC l = new NodosC();
            int opt=0;
 do{
     //cada uno de los scanners para leer en los menus con sus respectivas funciones 
    Scanner sc = new Scanner(System.in);
     Scanner bo = new Scanner(System.in);
        Scanner xd = new Scanner(System.in);
         Scanner ff = new Scanner(System.in);
         //menu de usuario para navegar entre las opciones
            System.out.println("\n"
                    +"1  - agregar\n"
                    +"2  - buscar\n"
                    +"3  - eliminar posicion\n"
                    +"4  - agregar palabra\n"
                    +"5  - mostrar\n"
                    +"6  - salir\n");
             switch (opt = sc.nextInt()){
                 case 1:
                     //aqui vamos a ingresar los datos que queremos dentro de la lista, unicamente de tipo String
                     System.out.println("Ingresa dato del Nodo");
                     String dato=bo.nextLine();
                     l.ingresarNodo(dato);
                 break;
                 case 2: 
                   System.out.println("Ingrese el dato a buscar");
                   //aqui se llama el metodo para buscar el Nodo
                   dato= xd.nextLine();
                   l.bnodo(dato);
                 break;
                 case 3:
                    System.out.println("ingresa el NODO a eliminar (puede ser inicio o final de la lista)"); 
                    // aqui se manda a traer el metodo desde la subclase para eliminar Nodo
                            dato=ff.nextLine();
                            l.delete(dato);
                     break;
                      case 4:
                          //metodo para imprimir en pantalla el nodo Palabra
                            l.mostrarP(l.PL(1));
                 break;
                    case 5:
                         l.mostrar();
                 break;
                 
             }
             
}while(opt !=6);
    }
    
}
 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nodos.clase;

import java.util.Random;

/**
 *
 * @author locop
 */
class NodosC {
        nodo primero;
    nodo ultimo;
    public NodosC(){
            primero = null;
             ultimo = null;
    }
            public void ingresarNodo( String dato){
    nodo add = new nodo();
    add.dato = dato;
    if(primero == null){
        primero= add;
        primero.sig=null;
        ultimo = primero;
    }else{
        ultimo.sig = add;
        add.sig = null;
        ultimo = add;
    }
    
    
}
            public void bnodo(String dato){ // aqui se lee el dato del usuario para dar vueltas en la lista, se revisa cada posicion
                nodo actual = new nodo();
                actual =primero;
                while(actual != null){
                    if(actual.dato == null ? dato == null : actual.dato.equals(dato)){ //aqui se evaluan y se pasa lista de cada Nodo
                    System.out.println("Nodo encontrado");
                    }else{
                           
                    }
                   actual = actual.sig;
                }
            }
               
     public static String[] PL(int cantidad){
        String[] union=new String[cantidad];
        Random randon=new Random();
        char[] May={'A','B','C','D','E','F','G','H','I','J','K','L','M','N','Ñ','O','P','Q','R','S','T','U','V','X','Y','Z'};
        char[] RBs={'0','1','2','3','4','5','6','7','8','9'
            + 'A','B','C','D','E','F','G','H','I','J','K','L','M','N','Ñ','O','P','Q','R','S','T','U','V','X','Y','Z'
            + 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','ñ','o','p','q','r','s','t','u','v','w','x','y','z'};
         char[] RBs2={'0','1','2','3','4','5','6','7','8','9'
            + 'A','B','C','D','E','F','G','H','I','J','K','L','M','N','Ñ','O','P','Q','R','S','T','U','V','X','Y','Z'
            + 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','ñ','o','p','q','r','s','t','u','v','w','x','y','z'};
          char[] RBs3={'0','1','2','3','4','5','6','7','8','9'
            + 'A','B','C','D','E','F','G','H','I','J','K','L','M','N','Ñ','O','P','Q','R','S','T','U','V','X','Y','Z'
            + 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','ñ','o','p','q','r','s','t','u','v','w','x','y','z'};
        char[] Espec={'#','$','%','&','@',};
        
        for (int i = 0; i < cantidad; i++) {
			union[i] = May[(int) (Math.floor(Math.random() * ((May.length - 1) - 0 + 1) + 0))] + " "
					+ RBs[(int) (Math.random()*(64-1))+1]+" "
                                        + RBs2[(int) (Math.random()*(64-1))+1]+" "
                                        + RBs3[(int) (Math.random()*(64-1))+1]+" "
                                        + Espec[(int) (Math.floor(Math.random() * ((Espec.length - 1) - 0 + 1) + 0))];
        }
        return union;
}
    
    public static void mostrarP(String[] nombresGenerados){
        for (int i = 0; i < nombresGenerados.length; i++) {
			System.out.println(nombresGenerados[i]);
    }
}
            
public void mostrar(){
    nodo ac = new nodo();
    ac= primero;
    while(ac != null){
        System.out.println(ac.dato);
        ac = (nodo) ac.sig;
    }
}
public void delete(String dato){
    nodo ac= new nodo();
    nodo anterior = new nodo();
    ac= primero;
     anterior= null;
    while(ac != null){
        if(ac.dato == null ? dato == null : ac.dato.equals(dato)){
            if(ac== primero){
                primero = primero.sig;
            }else{
                anterior.sig = ac.sig; 
            }
        }
        anterior= ac;
        ac = ac.sig;
    }
    
}



   

}

